apply plugin: 'com.android.application'

android {
    compileSdkVersion 23
    buildToolsVersion "23.0.2"

    defaultConfig {
        applicationId "com.zxy.idersettings"
        minSdkVersion 15
        targetSdkVersion 23
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
        }
    }

    signingConfigs {
        release {
            //v2SigningEnabled false
            storeFile file('android-platform-debug.keystore')
            keyAlias 'androiddebugkey'
            keyPassword 'android'
            storePassword 'android'
        }
    }

    signingConfigs {
        debug {
            //v2SigningEnabled false
            storeFile file('android-platform-debug.keystore')
            keyAlias 'androiddebugkey'
            keyPassword 'android'
            storePassword 'android'
        }
    }

    lintOptions {
        abortOnError false
    }
}

dependencies {
    //provided files('libs/classes-full-debug.jar')
    provided files('libs/classes.jar')
//    provided files('libs/ext.jar')
//    provided files('libs/framework.jar')
//    provided files('libs/classesext.jar')
    compile 'com.android.support:support-v4:23.1.1'
    //provided files('libs/classes-full-debug-rk.jar')
}

preBuild {
    doLast {
        //def imlFile = file(project.name + ".iml")
        def imlFile = file( "app.iml")
        println 'Change ' + project.name + '.iml order'
        try {
            def parsedXml = (new XmlParser()).parse(imlFile)
            def jdkNode = parsedXml.component[1].orderEntry.find { it.'@type' == 'jdk' }
            parsedXml.component[1].remove(jdkNode)
            //def sdkString = "Android API " + android.compileSdkVersion.substring("android-".length()) + " Platform" + " (1)"
            def sdkString = "Android API " + android.compileSdkVersion.substring("android-".length()) + " Platform"
            new Node(parsedXml.component[1], 'orderEntry', ['type': 'jdk', 'jdkName': sdkString, 'jdkType': 'Android SDK'])
            groovy.xml.XmlUtil.serialize(parsedXml, new FileOutputStream(imlFile))
        } catch (FileNotFoundException e) {
            // nop, iml not found
        }
    }
}